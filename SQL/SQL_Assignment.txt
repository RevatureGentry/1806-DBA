SQL Assignment:

Write SQL Queries that inserts 5 records into the Employee table
INSERT ALL
    INTO Employee ( EMPLOYEEID, LASTNAME, FIRSTNAME ) VALUES ('100001', 'FNAME1', 'LNAME1')
    INTO Employee ( EMPLOYEEID, LASTNAME, FIRSTNAME ) VALUES ('100002', 'FNAME2', 'LNAME2')
    INTO Employee ( EMPLOYEEID, LASTNAME, FIRSTNAME ) VALUES ('100003', 'FNAME3', 'LNAME3')
    INTO Employee ( EMPLOYEEID, LASTNAME, FIRSTNAME ) VALUES ('100004', 'FNAME4', 'LNAME4')
    INTO Employee ( EMPLOYEEID, LASTNAME, FIRSTNAME ) VALUES ('100005', 'FNAME5', 'LNAME5')
SELECT * FROM dual;

Write SQL Queries that inserts 10 records into the Customer table
INSERT ALL
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100001', 'FNAME1', 'LNAME1', 'EMAIL1')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100002', 'FNAME2', 'LNAME2', 'EMAIL2')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100003', 'FNAME3', 'LNAME3', 'EMAIL3')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100004', 'FNAME4', 'LNAME4', 'EMAIL4')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100005', 'FNAME5', 'LNAME5', 'EMAIL5')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100006', 'FNAME6', 'LNAME6', 'EMAIL6')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100007', 'FNAME7', 'LNAME7', 'EMAIL7')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100008', 'FNAME8', 'LNAME8', 'EMAIL8')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100009', 'FNAME9', 'LNAME9', 'EMAIL9')
    INTO Customer ( CUSTOMERID, FIRSTNAME, LASTNAME, EMAIL ) VALUES ('100010', 'FNAME10', 'LNAME10', 'EMAIL10')
SELECT * FROM dual;

Write SQL Queries that inserts 2 new genres
INSERT ALL
    INTO Genre ( GENREID, NAME ) VALUES ('26', 'Death Metal')
    INTO Genre ( GENREID, NAME ) VALUES ('27', 'Thrash Metal')
SELECT * FROM dual;

Write SQL Queries that insert 3 of your favorite albums
INSERT ALL
    INTO Album (ALBUMID, TITLE, ARTISTID) VALUES ('348', 'Peace Sells', '1')
    INTO Album (ALBUMID, TITLE, ARTISTID) VALUES ('349', 'Holy Wars...The Punishment Due', '1')
    INTO Album (ALBUMID, TITLE, ARTISTID) VALUES ('350', 'Symphony of Destruction', '1')
SELECT * FROM dual; 

Write a SQL Query that contains the names of all tracks that are longer than 6 minutes
SELECT NAME, MAX(MILLISECONDS)
FROM track
GROUP BY NAME
HAVING MAX(MILLISECONDS)>360000;

Write a SQL Query to find the biggest song (which takes up the most space)
SELECT NAME, MAX(BYTES) as LargestSize
FROM track
GROUP BY NAME
ORDER BY LargestSize DESC;
--Sidenote: Unable to only allow one record to return without it returning the incorrect record

Write a SQL Query that contains the titles of all albums with tracks longer than 6 minutes in them


Write a SQL Query that contains the albumId and number of songs in the album
Write a SQL query that contains artist's names and the number of tracks they have produced (assume an artist produced a track if it appears in one of their albums)
Write a SQL Query that returns the most purchased media type
Write a SQL Query showing customers not in the US
Write a SQL Query showing a unique list of billing countries on the Invoice table
Write a SQL Query that shows the Invoice Total, Customer Name, Country, and Sales agent for all invoices and customers
Write a SQL Query that shows all Tracks, but displays no IDs. Should also include the Album name, Media Type, and Genre
Write a SQL Query that returns the Top 40 Songs for 2013
Write a SQL Query that shows which sales agent made the most in sales overall
Write a SQL Query that shows the top 3 best selling artists
Write a SQL Query that returns which albums have no Heavy Metal tracks
Write a SQL Query to find the the managers of employees supporting Brazilian customers
Write a SQL Query that determines which artist has the most songs in each playlist
Write a SQL Query that determines what song(s) appear in the most playlists
Write a SQL Query that determines the 5th highest grossing song in 2009, 2010, 2011, 2012, and 2013
Write a SQL Query that determines the most downloaded genre by country
Write a SQL Query that determines the genres each salesperson contributes to most
